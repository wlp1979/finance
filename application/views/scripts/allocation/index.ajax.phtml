<?php
$countIncomes = count($this->incomes);
$totalCols = $countIncomes + 5;
$incomeTotals = array();
$currency = new Zend_Currency();
?>
<div id="allocations-table" style="height: 100%; width: 100%">
<table>
	<thead>
		<tr>
			<th class="first">
				<?= $this->button(array(
					'id' => 'new-income', 
					'text' => 'New Income', 
					'ajax' => true,
					'url' => array('controller' => 'income', 'action' => 'edit'),
					)); ?>
			</th>
			<th>Income Date</th>
			<th>&nbsp;</th>
			<?php foreach($this->incomes as $income): ?>
				<th class="income" data-income="<?= $income->id ?>"><?= $income->displayDate() ?></th>
			<?php endforeach; ?>
			<th>&nbsp;</th>
			<th>&nbsp;</th>
			<th class="last">&nbsp;</th>
		</tr>
		<tr>
			<th class="first">
				<?= $this->button(array(
					'id' => 'new-expense', 
					'text' => 'New Expense', 
					'ajax' => true,
					'url' => array('controller' => 'expense', 'action' => 'edit'),
					)); ?>
			</th>
			<th>Income Name</th>
			<th>Previous Balance</th>
			<?php foreach($this->incomes as $income): ?>
				<th class="income" data-income="<?= $income->id ?>"><?= $income->name ?></th>
			<?php endforeach; ?>
			<th>Total Income</th>
			<th>&nbsp;</th>
			<th class="last">&nbsp;</th>
		</tr>
		<tr>
			<th class="first">
				<?= $this->button(array(
					'id' => 'choose-expense', 
					'text' => 'Choose Expense', 
					'ajax' => true,
					'url' => array('controller' => 'expense', 'action' => 'chooser'),
					)); ?>
			</th>
			<th>Income Amount</th>
			<th><?= $currency->setValue($this->totalStarting) ?></th>
			<?php $totalIncome = $this->totalStarting; ?>
			<?php foreach($this->incomes as $income): ?>
				<?php $totalIncome += $income->amount; ?>
				<th class="income" data-income="<?= $income->id ?>"><?= $income->displayCurrency() ?></th>
			<?php endforeach; ?>
			<th><?= $currency->setValue($totalIncome) ?></th>
			<th>&nbsp;</th>
			<th class="last">&nbsp;</th>
		</tr>
		<tr>
			<th class="first">Expense</th>
			<th>Average Amount</th>
			<th>&nbsp;</th>
			<?php foreach($this->incomes as $income): ?>
				<th>&nbsp;</th>
			<?php endforeach; ?>
			<th>Allocated</th>
			<th>Spent</th>
			<th>Remaining</th>
		</tr>
	</thead>
	<tbody>
		<?php foreach($this->categories as $category) : ?>
			<?php 
			$categoryTotals = array(); 
			$rowCount = 0;
			?>
			<tr class="category">
				<td class="first"><?= $category->name ?></td>
				<?php for($i=1; $i < $totalCols; $i++ ) : ?>
				<td>&nbsp;</td>
				<?php endfor; ?>
				<td class="last">&nbsp;</td>
			</tr>
			<?php foreach($this->expenses as $expense) : ?>
				<?php if($expense->category_id == $category->id) : ?>
					<?php 
					$spent = @$this->spent[$expense->id]; 
					@$categoryTotals['spent'] += $spent;
					$balance = @$this->balances[$expense->id];
					$allocated = 0;
					?>
					<tr>
						<td class="first expense" data-expense="<?= $expense->id ?>"><?= $expense->name ?></td>
						<td><?= $currency->setValue(0)//$expense->getAverage()) ?></td>
						<td>
							<?php if($balance instanceof App_Model_ExpenseTotal) : ?>
								<?php
								@$categoryTotals['balance'] += $balance->total_allocated - $balance->total_spent;
								@$categoryTotals['allocated'] += $balance->total_allocated - $balance->total_spent;
								@$incomeTotals['balance'] += $balance->total_allocated - $balance->total_spent;
								$allocated += $balance->total_allocated - $balance->total_spent;
								?>
								<?= $currency->setValue($balance->total_allocated - $balance->total_spent) ?>
							<?php else: ?>
								&nbsp;
							<?php endif; ?>
						</td>
						<?php foreach($this->incomes as $income) : ?>
							<td class="allocation" data-income="<?= $income->id ?>" data-expense="<?= $expense->id ?>">
							<?php if(isset($this->allocations[$expense->id][$income->id])) : ?>
								<?php 
								@$categoryTotals[$income->id] += $this->allocations[$expense->id][$income->id]->amount;
								@$categoryTotals['allocated'] += $this->allocations[$expense->id][$income->id]->amount;
								@$incomeTotals[$income->id] += $this->allocations[$expense->id][$income->id]->amount;
								$allocated += $this->allocations[$expense->id][$income->id]->amount;
								?>
								<?= $this->allocations[$expense->id][$income->id]->displayCurrency() ?>
							<?php else: ?>
								&nbsp;
							<?php endif; ?>
							</td>
						<?php endforeach; ?>
						<td><?= $currency->setValue($allocated) ?></td>
						<td><?= $currency->setValue($spent) ?></td>
						<td><?= $currency->setValue($allocated - $spent) ?></td>
					</tr>
				<?php endif; ?>
			<?php endforeach; ?>
			<tr class="total">
				<td class="first">Subtotal</td>
				<td>&nbsp;</td>
				<td><?= $currency->setValue(@$categoryTotals['balance']) ?></td>
				<?php foreach($this->incomes as $income) : ?>
					<td><?= $currency->setValue(@$categoryTotals[$income->id]) ?></td>
				<?php endforeach; ?>
				<td><?= $currency->setValue(@$categoryTotals['allocated']) ?></td>
				<td><?= $currency->setValue(@$categoryTotals['spent']) ?></td>
				<td><?= $currency->setValue(@$categoryTotals['allocated'] - @$categoryTotals['spent']) ?></td>
			</tr>
		<?php endforeach; ?>
	</tbody>
	<tfoot>
		<tr class="total">
			<th class="first">Total</th>
			<th>&nbsp;</th>
			<th><?= $currency->setValue(@$incomeTotals['balance']) ?></th>
			<?php foreach($this->incomes as $income) : ?>
				<th><?= $currency->setValue(@$incomeTotals[$income->id]) ?></th>
			<?php endforeach; ?>
			<th><?= $currency->setValue(@$incomeTotals['allocated']) ?></th>
			<th><?= $currency->setValue(@$incomeTotals['spent']) ?></th>
			<th><?= $currency->setValue(@$incomeTotals['allocated'] - @$incomeTotals['spent']) ?></th>
		</tr>
		<tr class="total">
			<th class="first">Balance</th>
			<th>&nbsp;</th>
			<th><?= $currency->setValue($this->totalStarting - @$incomeTotals['balance']) ?></th>
			<?php foreach($this->incomes as $income) : ?>
				<th><?= $currency->setValue($income->amount - @$incomeTotals[$income->id]) ?></th>
			<?php endforeach; ?>
			<th>&nbsp;</th>
			<th>&nbsp;</th>
			<th>&nbsp;</th>
		</tr>
	</tfoot>
</table>
</div>
<script type="text/javascript">
function refreshAllocations(data){
	var tabData = {};
	if(typeof(data.expense_id) != 'undefined')
	{
		tabData.expense_id = data.expense_id;
	}
	
	$('#main-tabs').mainTabs('loadTab', tabData);
}

$(document).ready(function(){
	$('#new-expense').formDialogButton({
		buttonIcons: {primary: 'ui-icon-plusthick'},
		afterSubmit: refreshAllocations
	});

	$('#new-income').formDialogButton({
		buttonIcons: {primary: 'ui-icon-plusthick'},
		afterLoad: function(){
			$('input.datepicker', self.box).datepicker();
		},
		afterSubmit: refreshAllocations
	});

	$('#choose-expense').formDialogButton({
		width: 300,
		submitName: 'Choose',
		buttonIcons: {primary: 'ui-icon-check'},
		afterSubmit: refreshAllocations
	});
	
	$('.expense').click(function(){
		var expense = $(this);
		var options = {
			url: '/expense/edit/expense_id/' + expense.attr('data-expense'),
			afterSubmit: refreshAllocations
		};
		expense.formDialog(options);
		return false;
	});

	$('.income').click(function(){
		var income = $(this);
		var options = {
			url: '/income/edit/income_id/' + income.attr('data-income'),
			afterSubmit: refreshAllocations
		};
		income.formDialog(options);
		return false;
	});

	$('.allocation').click(function(){
		var allocation = $(this);
		var expense_id = allocation.attr('data-expense');
		var income_id = allocation.attr('data-income');
		var options = {
			url: '/allocation/edit/expense_id/' + expense_id + '/income_id/' + income_id,
			afterSubmit: refreshAllocations,
			extraButtons: {
				Delete: function(event, ui) {
					$.post('/allocation/delete/', {format: 'json', expense_id: expense_id, income_id: income_id}, function(data){
						allocation.formDialog('destroy');
						processJsonResponse(data, options.afterSubmit);
					}, 'json');
				}
			}
		};
		allocation.formDialog(options);
		return false;
	});

	$('#allocations-table').fixedHeaderTable({footer: true});
});
</script>